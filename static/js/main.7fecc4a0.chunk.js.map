{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchbox/searchbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","Cardlist","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCJbC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCHlBO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC6BHG,G,wDAhCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALH,E,qDASd,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAAEf,SAAUc,S,oBAIzC,WAAU,IAAD,SACwBE,KAAKR,MAA7BR,EADA,EACAA,SAASS,EADT,EACSA,YACVQ,EAAmBjB,EAASkB,QAAO,SAAAxB,GAAO,OAAEA,EAAQG,KAAKsB,cAAcC,SAASX,EAAYU,kBAClG,OACE,sBAAK3B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAc,SAAAiB,GAAC,OAAE,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAEzD,cAAC,EAAD,CAAUvB,SAAUiB,W,GA3BVO,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7fecc4a0.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css';\n\nexport const Card = props =>(\n    <div className='card-container'>\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n)","import React from 'react';\nimport {Card} from '../card/card.component'\nimport './card-list.styles.css';\n\nexport const Cardlist = props => (\n    <div className=\"card-list\">\n        {props.monsters.map(monster=>(\n            <Card key={monster.id} monster={monster}/>\n        ))}\n    </div>\n);","import React from 'react';\n\nimport './searchbox.styles.css';\n\nexport const SearchBox = ({placeholder,handleChange})=>(\n    <input\n        className=\"search\"\n        type=\"search\"\n        placeholder={placeholder}\n        onChange={handleChange}\n    />\n)","import {Cardlist} from './components/card-list/card-list.component';\nimport { SearchBox } from './components/searchbox/searchbox.component';\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users=>this.setState({ monsters: users }));\n  }\n\n  \n  render() {\n    const {monsters,searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster=>monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox \n          placeholder='searchs monster'\n          handleChange={e=>this.setState({ searchField: e.target.value})}\n        />\n        <Cardlist monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}